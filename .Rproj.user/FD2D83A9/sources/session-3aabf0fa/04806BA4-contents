---
title: "EntertainmentApps"
author: "Nur Imam Masri"
date: "2023-06-01"
output: html_document
---

```{r}
# Import Library Visualization
library(dplyr) # untuk transformasi data
library(plotly) # untuk membuat plot menjadi interaktif
library(glue) # untuk custom informasi saat plot interaktif
library(scales) # untuk custom keterangan axis atau lainnya
library(tidyr) # untuk custom keterangan axis atau lainnya
library(stringr)# untuk melakuan kustom teks pada tooltip
library(wordcloud2)
```

```{r}
spotify <- read.csv("datasets/data.csv")
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
```

```{r}
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")

spotify_clean <- spotify %>% 
  mutate(across(all_of(fct_cols), as.factor)) %>%
  mutate(across(all_of(num_cols), as.numeric)) %>% 
  mutate(across(all_of(int_cols), as.integer)) %>% 
  mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>% 
  mutate(release_date = as.Date(release_date)) %>% 
  arrange(spotify$year)

spotify_clean
```

```{r}
spotify_genre <- read.csv("datasets/data_by_genres.csv")
glimpse(spotify_genre)
```

```{r}
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")

spotify_genre_clean <- spotify_genre %>% 
  mutate(across(all_of(fct_cols), as.factor)) %>%
  mutate(across(all_of(num_cols), as.numeric)) %>% 
  mutate(across(all_of(int_cols), as.integer))

spotify_genre_clean
```

```{r}
spotify_by_year <- spotify_clean %>% 
    group_by(year) %>%
    summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), \(x) mean(x, na.rm = TRUE)))

data_agg1 <- spotify_by_year %>% 
  select(-key) %>% 
  gather(key = "Variable", value = "Value", - year)

plot1 <- ggplot(data_agg1, aes(x = year, y = Value)) + 
  geom_line(aes(color = Variable))  + 
  scale_color_manual(values = c("red", "green", "orange", "purple", "blue", "black", "darkgreen")) + 
  guides(color = "none") + 
  labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") + 
  scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
  theme_minimal()


ggplotly(plot1)
```

```{r}
data_agg2 <- spotify_clean %>%
  filter(year == 2020) %>%
  select(name, popularity, artists) %>%
  arrange(desc(popularity)) %>%
  mutate(text = glue("popularity: {popularity}
                      artists: {artists}")) %>%
  head(15)

plot_rank <- ggplot(data_agg2,
                    aes(x = popularity, y = reorder(name, popularity),
                        text = text)) +
  geom_col(aes(fill = popularity)) +
  scale_y_discrete(labels = wrap_format(30)) +
  scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, 10)) +
  scale_fill_gradient(low = "light blue", high = "dark blue") +
  labs(x = "Popularity (0-100)", y = NULL,
       title = glue("Top 15 Popular Songs")) +
  theme_minimal()

ggplotly(plot_rank, tooltip = "text")
```
