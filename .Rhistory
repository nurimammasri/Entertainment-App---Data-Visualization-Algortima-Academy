# Import Library Visualization
library(tidyverse)
library(ggplot2)
library(dplyr) # untuk transformasi data
library(plotly) # untuk membuat plot menjadi interaktif
library(glue) # untuk custom informasi saat plot interaktif
library(scales) # untuk custom keterangan axis atau lainnya
library(tidyr) # untuk custom keterangan axis atau lainnya
library(stringr)# untuk melakuan kustom teks pada tooltip
library(wordcloud2)
library(readr)
spotify <- read_csv("datasets/data.csv", show_col_types = FALSE)
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(fct_cols, as.factor)) %>%
mutate(across(num_cols, as.numeric)) %>%
mutate(across(int_cols, as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = ymd(release_date)) %>%
arrange(spotify_clean$year)
spotify_clean
spotify_genre <- read_csv("datasets/data_by_genres.csv", show_col_types = FALSE)
glimpse(spotify_genre)
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")
spotify_genre_clean <- spotify_genre %>%
mutate(across(fct_cols, as.factor)) %>%
mutate(across(num_cols, as.numeric)) %>%
mutate(across(int_cols, as.integer))
spotify_genre_clean
# Import Library Visualization
library(tidyverse)
library(ggplot2)
library(dplyr) # untuk transformasi data
library(plotly) # untuk membuat plot menjadi interaktif
library(glue) # untuk custom informasi saat plot interaktif
library(scales) # untuk custom keterangan axis atau lainnya
library(tidyr) # untuk custom keterangan axis atau lainnya
library(stringr)# untuk melakuan kustom teks pada tooltip
library(wordcloud2)
library(readr)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = as.Date(release_date)) %>%
arrange(spotify_clean$year)
spotify_clean
# Import Library Visualization
library(tidyverse)
library(ggplot2)
library(dplyr) # untuk transformasi data
library(plotly) # untuk membuat plot menjadi interaktif
library(glue) # untuk custom informasi saat plot interaktif
library(scales) # untuk custom keterangan axis atau lainnya
library(tidyr) # untuk custom keterangan axis atau lainnya
library(stringr)# untuk melakuan kustom teks pada tooltip
library(wordcloud2)
library(readr)
spotify <- read_csv("datasets/data.csv", show_col_types = FALSE)
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = as.Date(release_date)) %>%
arrange(spotify_clean$year)
spotify_clean
spotify_genre <- read_csv("datasets/data_by_genres.csv", show_col_types = FALSE)
glimpse(spotify_genre)
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")
spotify_genre_clean <- spotify_genre %>%
mutate(across(fct_cols, as.factor)) %>%
mutate(across(num_cols, as.numeric)) %>%
mutate(across(int_cols, as.integer))
spotify_genre_clean
# Import Library Visualization
library(tidyverse)
library(ggplot2)
library(dplyr) # untuk transformasi data
library(plotly) # untuk membuat plot menjadi interaktif
library(glue) # untuk custom informasi saat plot interaktif
library(scales) # untuk custom keterangan axis atau lainnya
library(tidyr) # untuk custom keterangan axis atau lainnya
library(stringr)# untuk melakuan kustom teks pada tooltip
library(wordcloud2)
library(readr)
spotify <- read_csv("datasets/data.csv", show_col_types = FALSE)
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = as.Date(release_date)) %>%
arrange(spotify_clean$year)
spotify_clean
spotify_genre <- read_csv("datasets/data_by_genres.csv", show_col_types = FALSE)
glimpse(spotify_genre)
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")
spotify_genre_clean <- spotify_genre %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer))
spotify_genre_clean
shiny::runApp()
spotify_by_year
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
spotify_by_year
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
spotify_by_year
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(-c(artists, duration_ms, explicit, mode, name, release_date, tempo, id, loudness, popularity), mean, na.rm = TRUE))
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(-c(artists, duration_ms, explicit, mode, name, release_date, tempo, id, loudness, popularity), mean, na.rm = TRUE)
runApp()
runApp()
runApp()
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year)
# Import Library Visualization
library(tidyverse)
library(ggplot2)
library(dplyr) # untuk transformasi data
library(plotly) # untuk membuat plot menjadi interaktif
library(glue) # untuk custom informasi saat plot interaktif
library(scales) # untuk custom keterangan axis atau lainnya
library(tidyr) # untuk custom keterangan axis atau lainnya
library(stringr)# untuk melakuan kustom teks pada tooltip
library(wordcloud2)
library(readr)
spotify <- read_csv("datasets/data.csv", show_col_types = FALSE)
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = as.Date(release_date)) %>%
arrange(spotify_clean$year)
spotify_clean
spotify_genre <- read_csv("datasets/data_by_genres.csv", show_col_types = FALSE)
glimpse(spotify_genre)
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")
spotify_genre_clean <- spotify_genre %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer))
spotify_genre_clean
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year)
data_agg1
runApp()
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
spotify_by_year
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year)
plot1<- ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
guides(scale = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year)
ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
guides(scale = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year)
plot1 <- ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
guides(scale = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year)
plot1 <- ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
scale_color_manual(values = c("red", "green", "orange", "purple")) +
guides(color = FALSE) +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), mean, na.rm = TRUE))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year)
plot1 <- ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
scale_color_manual(values = c("red", "green", "orange", "purple", "blue", "black", "darkgreen")) +
guides(color = FALSE) +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
library(tidyverse)
library(plotly)
library(scales)
library(glue)
library(DT)
library(wordcloud2)
library(readr)
library(dplyr)
library(ggplot2)
spotify <- read.csv("datasets/data.csv")
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = as.Date(release_date)) %>%
arrange(spotify$year)
spotify_clean
spotify_genre <- read.csv("datasets/data_by_genres.csv")
glimpse(spotify_genre)
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")
spotify_genre_clean <- spotify_genre %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer))
spotify_genre_clean
spotify_clean
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), \(x) mean(x, na.rm = TRUE)))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", -year) %>%
filter(year>=2000) %>%
head(100)
data_agg1
names(spotify_by_year)
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "speechiness")
spotify_clean %>%
pivot_longer(cols = cr,
names_to = "Variable",
values_to = "Value")
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "speechiness")
spotify_clean %>%
pivot_longer(cols = cr,
names_to = "Variable",
values_to = "Value") %>%
select(cr)
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "speechiness")
spotify_clean %>%
pivot_longer(cols = cr,
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value))
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "speechiness")
data_agg1 %>%
pivot_longer(cols = cr,
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value))
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "speechiness")
data_agg1 <- spotify_clean %>%
pivot_longer(cols = cr,
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value))
plot1 <- ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
scale_color_manual(values = c("red", "green", "orange", "purple", "blue", "black", "darkgreen")) +
guides(color = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
plot1 <- ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
scale_color_manual(values = c("red", "green", "orange", "purple", "blue", "black", "darkgreen", "pink")) +
guides(color = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
library(tidyverse)
library(plotly)
library(scales)
library(glue)
library(DT)
library(wordcloud2)
library(readr)
library(dplyr)
library(ggplot2)
spotify <- read.csv("datasets/data.csv")
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = as.Date(release_date)) %>%
arrange(spotify$year)
spotify_clean
spotify_genre <- read.csv("datasets/data_by_genres.csv")
glimpse(spotify_genre)
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")
spotify_genre_clean <- spotify_genre %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer))
spotify_genre_clean
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "speechiness")
data_agg1 <- spotify_clean %>%
pivot_longer(cols = all_of(cr),
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value)) %>%
gather(key = "Variable", value = "Value", -year) %>%
filter(year>=2000)
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "speechiness")
data_agg1 <- spotify_clean %>%
pivot_longer(cols = all_of(cr),
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value)) %>%
gather(key = "Variable", value = "Value", -year) %>%
filter(year>=2000)
data_agg1
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "speechiness")
data_agg1 <- spotify_clean %>%
pivot_longer(cols = all_of(cr),
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value))
data_agg1
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "speechiness")
data_agg1 <- spotify_clean %>%
pivot_longer(cols = all_of(cr),
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value)) %>%
filter(year>=2000)
data_agg1
plot1 <- ggplot(data_agg1, aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
scale_color_manual(values = c("red", "green", "orange", "purple", "blue", "black", "darkgreen")) +
guides(color = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), \(x) mean(x, na.rm = TRUE)))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year) %>%
filter(year>=2000)
plot1 <- ggplot(data_agg1, mapping=aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
scale_color_manual(values = c("red", "green", "orange", "purple", "blue", "black", "darkgreen")) +
guides(color = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), \(x) mean(x, na.rm = TRUE)))
library(tidyverse)
library(plotly)
library(scales)
library(glue)
library(DT)
library(wordcloud2)
library(readr)
library(dplyr)
library(ggplot2)
spotify <- read.csv("datasets/data.csv")
spotify$artists <- str_replace_all(spotify$artists, c("\\[" = "", "\\]" = "", "'"=""))
glimpse(spotify)
chr_cols <- c("artists", "name", "id", "release_date")
fct_cols <- c("explicit", "mode")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("year", "duration_ms", "key", "popularity")
spotify_clean <- spotify %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer)) %>%
mutate(release_date = ifelse(nchar(release_date) == 4, paste(release_date,"-01-01", sep=""), release_date)) %>%
mutate(release_date = as.Date(release_date)) %>%
arrange(spotify$year)
spotify_clean
spotify_genre <- read.csv("datasets/data_by_genres.csv")
glimpse(spotify_genre)
fct_cols <- c("mode", "genres")
num_cols <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "loudness", "speechiness", "tempo")
int_cols <- c("duration_ms", "key", "popularity")
spotify_genre_clean <- spotify_genre %>%
mutate(across(all_of(fct_cols), as.factor)) %>%
mutate(across(all_of(num_cols), as.numeric)) %>%
mutate(across(all_of(int_cols), as.integer))
spotify_genre_clean
cr <- c("valence", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "speechiness")
data_agg1 <- spotify_clean %>%
pivot_longer(cols = all_of(cr),
names_to = "Variable",
values_to = "Value") %>%
select(c(year, Variable, Value)) %>%
filter(year>=2000)
data_agg1
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), \(x) mean(x, na.rm = TRUE)))
spotify_by_year
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), \(x) mean(x, na.rm = TRUE)))
names(spotify_by_year)
spotify_by_year <- spotify_clean %>%
group_by(year) %>%
summarise(across(c(-artists, -duration_ms, -explicit, -mode, -name, -release_date, -tempo, -id, -loudness, -popularity), \(x) mean(x, na.rm = TRUE)))
data_agg1 <- spotify_by_year %>%
select(-key) %>%
gather(key = "Variable", value = "Value", - year) %>%
filter(year>=2000)
data_agg1
plot1 <- ggplot(data_agg1, mapping=aes(x = year, y = Value)) +
geom_line(aes(color = Variable))  +
scale_color_manual(values = c("red", "green", "orange", "purple", "blue", "black", "darkgreen")) +
guides(color = "none") +
labs(x = "Year", y = "Value", title = "Preference Music Taste in the Past Century on Spotify") +
scale_x_continuous(limits = c(1921, 2020), breaks = seq(1921, 2020, 10)) +
theme_minimal()
ggplotly(plot1)
